before

public void calcAdjacencies() {
		for (int row=0; row<numRows; row++) {
			for (int column=0; column<numColumns; column++) {
				HashSet<BoardCell> set = new HashSet<BoardCell>();
				//a room piece (sans doorway) will have no adjacencies
				if (board[row][column].isDoorway()) {
					if (board[row][column].getDoorDirection() == DoorDirection.UP) {
						if (board[row-1][column].isWalkway()) {
							set.add(board[row-1][column]);
						}
					}
					else if (board[row][column].getDoorDirection() == DoorDirection.LEFT) {
						if (board[row][column-1].isWalkway()) {
							set.add(board[row][column-1]);
						}
					}
					else if (board[row][column].getDoorDirection() == DoorDirection.DOWN) {
						if (board[row+1][column].isWalkway()) {
							set.add(board[row+1][column]);
						}
					}
					else if (board[row][column].getDoorDirection() == DoorDirection.RIGHT) {
						if (board[row][column+1].isWalkway()) {
							set.add(board[row][column+1]);
						}
					}
				}
				if (board[row][column].isWalkway()) {
					if (row + 1 < numRows) {
						if (board[row+1][column].isWalkway() || (board[row+1][column].getDoorDirection() == DoorDirection.UP)) {
							set.add(board[row+1][column]);
						}
					}
					if (column + 1 < numColumns) {
						if (board[row][column+1].isWalkway() || (board[row][column+1].getDoorDirection() == DoorDirection.LEFT)) {
							set.add(board[row][column+1]);
						}
					}
					if (row - 1 >= 0) {
						if (board[row-1][column].isWalkway() || (board[row-1][column].getDoorDirection() == DoorDirection.DOWN)) {
							set.add(board[row-1][column]);
						}					
					}
					if (column - 1 >= 0) {
						if (board[row][column-1].isWalkway() || (board[row][column-1].getDoorDirection() == DoorDirection.RIGHT)) {
							set.add(board[row][column-1]);
						}
					}
				}
				board[row][column].setAdjacency(set);
			}
		}
	}