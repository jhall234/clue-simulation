Carl Schader
Josh Hallinan

before

public void calcAdjacencies() {
        for (int row=0; row<numRows; row++) {
            for (int column=0; column<numColumns; column++) {
                HashSet<BoardCell> set = new HashSet<BoardCell>();
                //a room piece (sans doorway) will have no adjacencies
                if (board[row][column].isDoorway()) {
                    if (board[row][column].getDoorDirection() == DoorDirection.UP) {
                        if (board[row-1][column].isWalkway()) {
                            set.add(board[row-1][column]);
                        }
                    }
                    else if (board[row][column].getDoorDirection() == DoorDirection.LEFT) {
                        if (board[row][column-1].isWalkway()) {
                            set.add(board[row][column-1]);
                        }
                    }
                    else if (board[row][column].getDoorDirection() == DoorDirection.DOWN) {
                        if (board[row+1][column].isWalkway()) {
                            set.add(board[row+1][column]);
                        }
                    }
                    else if (board[row][column].getDoorDirection() == DoorDirection.RIGHT) {
                        if (board[row][column+1].isWalkway()) {
                            set.add(board[row][column+1]);
                        }
                    }
                }
                if (board[row][column].isWalkway()) {
                    if (row + 1 < numRows) {
                        if (board[row+1][column].isWalkway() || (board[row+1][column].getDoorDirection() == DoorDirection.UP)) {
                            set.add(board[row+1][column]);
                        }
                    }
                    if (column + 1 < numColumns) {
                        if (board[row][column+1].isWalkway() || (board[row][column+1].getDoorDirection() == DoorDirection.LEFT)) {
                            set.add(board[row][column+1]);
                        }
                    }
                    if (row - 1 >= 0) {
                        if (board[row-1][column].isWalkway() || (board[row-1][column].getDoorDirection() == DoorDirection.DOWN)) {
                            set.add(board[row-1][column]);
                        }                   
                    }
                    if (column - 1 >= 0) {
                        if (board[row][column-1].isWalkway() || (board[row][column-1].getDoorDirection() == DoorDirection.RIGHT)) {
                            set.add(board[row][column-1]);
                        }
                    }
                }
                board[row][column].setAdjacency(set);
            }
        }
    }



    after

public void calcAdjacencies() {
        for (int row=0; row<numRows; row++) {
            for (int column=0; column<numColumns; column++) {
                HashSet<BoardCell> set = new HashSet<BoardCell>();
                //a room piece (sans doorway) will have no adjacencies
                if (board[row][column].getDoorDirection() == DoorDirection.UP) {
                    if (board[row-1][column].isWalkway()) {
                        set.add(board[row-1][column]);
                    }
                }
                else if (board[row][column].getDoorDirection() == DoorDirection.LEFT) {
                    if (board[row][column-1].isWalkway()) {
                        set.add(board[row][column-1]);
                    }
                }
                else if (board[row][column].getDoorDirection() == DoorDirection.DOWN) {
                    if (board[row+1][column].isWalkway()) {
                        set.add(board[row+1][column]);
                    }
                }
                else if (board[row][column].getDoorDirection() == DoorDirection.RIGHT) {
                    if (board[row][column+1].isWalkway()) {
                        set.add(board[row][column+1]);
                    }
                }
                else if (board[row][column].isWalkway()) {
                    if (row + 1 < numRows) {
                        if (board[row+1][column].isWalkway() || (board[row+1][column].getDoorDirection() == DoorDirection.UP)) {
                            set.add(board[row+1][column]);
                        }
                    }
                    if (column + 1 < numColumns) {
                        if (board[row][column+1].isWalkway() || (board[row][column+1].getDoorDirection() == DoorDirection.LEFT)) {
                            set.add(board[row][column+1]);
                        }
                    }
                    if (row - 1 >= 0) {
                        if (board[row-1][column].isWalkway() || (board[row-1][column].getDoorDirection() == DoorDirection.DOWN)) {
                            set.add(board[row-1][column]);
                        }                   
                    }
                    if (column - 1 >= 0) {
                        if (board[row][column-1].isWalkway() || (board[row][column-1].getDoorDirection() == DoorDirection.RIGHT)) {
                            set.add(board[row][column-1]);
                        }
                    }
                }
                board[row][column].setAdjacency(set);
            }
        }
    }

commit 26b9fb9f69b631632fd9ab7d2f2f1d85ac4cf6ca
Author: Carl Schader <cschader@factorearth.com>
Date:   Mon Oct 29 21:48:08 2018 -0600

    refactored calcAdjacencies() for readability

commit 6d41a318886fc94f90dbd2eadc89585dcf8b52c4
Author: Carl Schader <cschader@factorearth.com>
Date:   Mon Oct 29 21:32:03 2018 -0600

    removed superfluous comments in main used for testing on Board.java

commit af9fd8b64cea6ebe51ab1ff39b46787887dc7d5d
Author: Joshua Hallinan <jhallinan@mymail.mines.edu>
Date:   Mon Oct 29 15:12:40 2018 -0600

    Removed all if statements from boolean functions in BoardCell.java

commit 7bfd2ba96a6222061b8d7791a50fc0402d8d0296
Author: Joshua Hallinan <jhallinan@mymail.mines.edu>
Date:   Mon Oct 29 15:04:10 2018 -0600

    Removed functionality to print out number of rows and columns to the console. Does not add to the user experience. Also remove commented old commented out versions of functions

commit 68846b1629e9f389f8b0a0e2c1ddf995f0061e0c
Author: Joshua Hallinan <jhallinan@mymail.mines.edu>
Date:   Mon Oct 29 14:49:38 2018 -0600

    Removed unused/duplicate code in loadBoardConfig method in Board.java
    
    Removes temp variable for holding next line and merged it with the variable file_row

commit 4432dfa0f222346052df379cc8bcf467fb46dc76
Author: Joshua Hallinan <jhallinan@mymail.mines.edu>
Date:   Mon Oct 29 14:21:08 2018 -0600

    removed empty if statement in loadRoomConfig by negating statement
    
    had empty if statement. Removed by negating the if statment and placing the corresponding else statement's code in the if statement

commit 8c3ade3f5964f84c6cc45414a9450a3a0432fdab
Author: Joshua Hallinan <jhallinan@mymail.mines.edu>
Date:   Mon Oct 29 14:16:58 2018 -0600

    Removed unnessecary line variable in loadRoomConfig method in Board.java

commit b7ecbc97fc34224dbf923e48305bcd5ba2fc95c1
Author: Joshua Hallinan <jhallinan@mymail.mines.edu>
Date:   Mon Oct 29 12:46:38 2018 -0600

    Removed old commented out calcTargets function in Board.java
    
    Removed old duplicate function that was commented out on line106 in Board.java

commit e157240321a55a9891ae77561c7b909435f97145
Author: Carl Schader <cschader@factorearth.com>
Date:   Mon Oct 22 21:50:33 2018 -0600

    all tests working still

commit 3a2bf786a1a1dcdc5e381b88c15625509a2c230d
Author: Carl Schader <cschader@factorearth.com>
Date:   Mon Oct 22 21:50:08 2018 -0600

    all tests working

commit 7dd678a832862d6db2d43ac2f7f6c14421fcd790
Author: Joshua Hallinan <jhallinan@mymail.mines.edu>
Date:   Mon Oct 22 15:27:22 2018 -0600

    fixed more tests in boardadjtargettests.java

commit fb99a6b47b97ff7f35399ea541933f6959bdeea7
Author: Joshua Hallinan <jhallinan@mymail.mines.edu>
Date:   Mon Oct 22 14:55:38 2018 -0600

    6/11 tests working on BoardAdjTargetTests.java

commit 9b569452b1777679b5c2edd17b016f140287f9a9
Author: Joshua Hallinan <jhallinan@mymail.mines.edu>
Date:   Sun Oct 21 20:09:58 2018 -0600

    added author names to BoardAdjTargetTests

commit a9c1cbb023d2b1f5194012800c6b1c0e430ae565
Author: Joshua Hallinan <jhallinan@mymail.mines.edu>
Date:   Sun Oct 21 20:07:45 2018 -0600

    Made sure new test met class requirements

commit fd90ee726d0106227667f905a4ef0a193b986dcb
Author: Joshua Hallinan <jhallinan@mymail.mines.edu>
Date:   Sun Oct 21 19:51:53 2018 -0600

    added white squares to .xlsx for door direction test

commit 37120cb84c2d50e003a47863f5e8d8ad6c72644c
Author: Joshua Hallinan <jhallinan@mymail.mines.edu>
Date:   Sun Oct 21 19:44:15 2018 -0600

    Created Failing BoardAdjTargetTests

commit 1a8fcfd98349b90c15c32d0b76a5f7b8fdbf4d9f
Author: Josh Hallinan <JoshHallinan234@gmail.com>
Date:   Thu Oct 11 00:25:01 2018 -0600

    all working tests

commit 83d7758d27730d775f54965fff98922b4a82454f
Author: Josh Hallinan <JoshHallinan234@gmail.com>
Date:   Wed Oct 10 22:38:08 2018 -0600

    Passed all initialization and exception tests

commit 07c3c0e04c4a064d70633eefeb2985fc5ff6bbe8
Author: Carl Schader <cschader@factorearth.com>
Date:   Tue Oct 9 16:43:37 2018 -0600

    working on passing exception tests.

commit 0bd39a6310da5446a1c01f5d3c6eca814b2d3883
Author: Carl Schader <cschader@factorearth.com>
Date:   Tue Oct 9 15:45:15 2018 -0600

    Passing Tests

commit a84fb8d17ffa59e09cefb27ec674144c80f7131c
Author: Carl Schader <cschader@factorearth.com>
Date:   Sat Oct 6 19:18:42 2018 -0600

    Final commit: added a text file to explain our tests.

commit 2386de7b56f847345d5287a5743cb12d0fd03f35
Author: Carl Schader <cschader@factorearth.com>
Date:   Sat Oct 6 19:11:38 2018 -0600

    added javadoc and inline comments

commit 04163eeeba9513c6090b975f2ef8658ecf19e578
Author: Carl Schader <cschader@factorearth.com>
Date:   Sat Oct 6 18:53:43 2018 -0600

    All tests are failing yay.

commit 09544123dfae0724c01ec1469e669af975f42bb5
Author: Carl Schader <cschader@factorearth.com>
Date:   Sat Oct 6 17:47:33 2018 -0600

    Finished skeleton classes. Beginning JUnit tests.

commit 86dc4f5ad13eae823cff7529b405b54e665cb699
Author: Carl Schader <cschader@factorearth.com>
Date:   Sat Oct 6 17:11:48 2018 -0600

    Start of assignment 13A-1

commit c28be45608838bb6b0bc84314f26d08df4a4db17
Author: Carl Schader <cschader@factorearth.com>
Date:   Fri Oct 5 12:31:16 2018 -0600

    all tests working

commit 0cae185a823dbd4dfa8e7562c86165dcf9d2c018
Author: Carl Schader <cschader@factorearth.com>
Date:   Thu Oct 4 14:34:14 2018 -0600

    failing tests comlete

commit 2a343c13b1db153e1be873cc9fcb431174251fca
Author: Carl Schader <cschader@factorearth.com>
Date:   Tue Oct 2 14:12:01 2018 -0600

    initial commit
